import numpy as np
from tensorflow.keras.datasets import mnist
import pandas as pd

(x_train, y_train), (x_test, y_test) = mnist.load_data()
# print(x_train)   # 샘플만 요약해 나와서 000만 나옴
print(x_train[0])
print("y_train[0] : ", y_train[0])

# [[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   3  18  18  18 126 136
#   175  26 166 255 247 127   0   0   0   0]
#  [  0   0   0   0   0   0   0   0  30  36  94 154 170 253 253 253 253 253
#   225 172 253 242 195  64   0   0   0   0]
#  [  0   0   0   0   0   0   0  49 238 253 253 253 253 253 253 253 253 251
#    93  82  82  56  39   0   0   0   0   0]
#  [  0   0   0   0   0   0   0  18 219 253 253 253 253 253 198 182 247 241
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0  80 156 107 253 253 205  11   0  43 154
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0  14   1 154 253  90   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0 139 253 190   2   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0  11 190 253  70   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0  35 241 225 160 108   1
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0  81 240 253 253 119
#    25   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0  45 186 253 253
#   150  27   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  16  93 252
#   253 187   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 249
#   253 249  64   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0  46 130 183 253
#   253 207   2   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0  39 148 229 253 253 253
#  [  0   0   0   0   0   0   0   0   0   0  24 114 221 253 253 253 253 201
#    78   0   0   0   0   0   0   0   0   0]
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0  18 171 219 253 253 253 253 195  80   9   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0  55 172 226 253 253 253 253 244 133  11   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0 136 253 253 253 212 135 132  16   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]
#  [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
#     0   0   0   0   0   0   0   0   0   0]] 5     # 5는 y, 나머지는 x  위 숫자 그림 잘 보면 0임

print(x_train.shape, y_train.shape)   # (60000, 28, 28) (60000,)  6만의 28, 28, 1 / 컬러는 6만의 28, 28, 3
print(x_test.shape, y_test.shape)   # (10000, 28, 28) (10000,)   만의 28, 28, 1

print(np.unique(y_train, return_counts=True))   
# y의 분류값을 찾는거 넘파이 유니크, 판다스 벨류카운트 라벨이 뭐가 있는지 특성을 나열
# (array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=uint8),   # 데이터의 특성
# array([5923, 6742, 5958, 6131, 5842, 5421, 5918, 6265, 5851, 5949], dtype=int64))   # 특성의 갯수

# print(pd.value_counts(y_test))
# 1    1135
# 2    1032
# 7    1028
# 3    1010
# 9    1009
# 4     982
# 0     980
# 8     974
# 6     958
# 5     892   # 제일 마지막 모델의 레이어는 모델.add(덴스, 액티베이션=소프트맥스 (덴스 10))

import matplotlib.pyplot as plt
plt.imshow(x_train[0], 'gray')   # gray 흑백으로 하겠다
plt.show()

# -------------------
# 다른 데이터로 테스트
# (x_train, y_train), (x_test, y_test) = mnist.load_data()
# # print(x_train)   # 샘플만 요약해 나와서 000만 나옴
# print(x_train[15])
# print("y_train[15] : ", y_train[15])

# print(x_train.shape, y_train.shape) 
# print(x_test.shape, y_test.shape)   

# print(np.unique(y_train, return_counts=True))   # y의 분류값을 찾는거

# print(pd.value_counts(y_test))

# import matplotlib.pyplot as plt
# plt.imshow(x_train[15], 'gray')   # gray 흑백으로 하겠다
# plt.show()
# -------------------